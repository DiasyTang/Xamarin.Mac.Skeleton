// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using Skeleton.Mac.FilesTableView;
using ObjCRuntime;
using CoreGraphics;

namespace Skeleton.Mac
{
	public partial class FileTableView : NSTableView
	{
        private int Row = -1;
		public FileTableView (IntPtr handle) : base (handle)
		{
            
		}

		public override void WillOpenMenu(NSMenu menu, NSEvent theEvent)
		{
            base.WillOpenMenu(menu, theEvent);
            if (Row < 0)
            {
                menu.CancelTracking();
            }
		}

		public override void AwakeFromNib()
		{
            base.AwakeFromNib();
            foreach (var item in this.Menu.ItemArray())
            {
                switch (item.Title)
                {
                    case "Open":
                        item.Activated += OpenMenu;
                        break;
                    case "Rename":
                        item.Activated += RenameMenu;
                        break;
                    case "Delete":
                        item.Activated += DeleteMenu;
                        break;
                    case "Export":
                        item.Activated += ExportMenu;
                        break;
                    case "Share":
                        item.Activated += ShareMenu;
                        break;
                }
            }
		}

        private void OpenMenu(object sender, EventArgs e)
        {
            
        }

        private void RenameMenu(object sender, EventArgs e)
        {
            
        }

        private void DeleteMenu(object sender, EventArgs e)
        {
            
        }

        private void ShareMenu(object sender, EventArgs e)
        {
            
        }

        private void ExportMenu(object sender, EventArgs args)
        {

        }

		public override NSView HitTest(CGPoint aPoint)
		{
            Row = (int)GetRow(aPoint);
            return base.HitTest(aPoint);
		}

        public delegate void ClickedDelegate(FileItem item);
        public event ClickedDelegate Clicked;

        internal void RaiseClickedEvent(FileItem item){
            this.Clicked?.Invoke(item);
        }
	}
}
